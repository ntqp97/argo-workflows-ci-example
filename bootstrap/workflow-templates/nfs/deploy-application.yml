apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: deploy-application
  annotations:
    workflows.argoproj.io/description: >-
      Leverages Argo Workflows' ability to interact directly with Kubernetes to deploy an Argo CD Application.
      It monitors the health status of the application and is only considered 'done' once the Argo CD
      Application reports itself as healthy.
    workflows.argoproj.io/maintainer: 'Pipekit Inc'
    workflows.argoproj.io/maintainer_url: 'https://github.com/pipekit/argo-workflows-ci-example'
    workflows.argoproj.io/version: '>= 3.3.6'
spec:
  entrypoint: main
  templates:
  - name: main
    dag:
      tasks:            
        - name: deploy-application
          template: deploy-application

  - name: deploy-application
    resource:
      action: create
      successCondition: status.health.status == Healthy
      failureCondition: status.health.status == Degraded
      manifest: |
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        metadata:
          name: final-application
          finalizers:
            - resources-finalizer.argocd.argoproj.io
          namespace: argocd
        spec:
          destination:
            namespace: final-application
            server: 'https://kubernetes.default.svc'
          project: default
          source:
            path: bootstrap/final-application
            repoURL: 'https://github.com/pipekit/argo-workflows-ci-example.git'
            targetRevision: HEAD
          syncPolicy:
            automated:
              prune: true
              selfHeal: true
            syncOptions:
              - PrunePropagationPolicy=background
              - PruneLast=true
              - CreateNamespace=true
